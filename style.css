@property --floor {
  syntax: '<integer>';
  initial-value: 0;
  inherits: true;
}

@property --player-mod {
  syntax: '<integer>';
  initial-value: 10;
  inherits: true;
}

:root {
  --cell-size: 100px;
  --turn: 0;
  --floor: calc((var(--turn))/ 2 - .5);
  --player-mod: calc(mod(var(--turn), 2) + 1);
  --player-prop: calc((var(--turn)) - 2 * var(--floor) + 1);
  --player: min(var(--player-mod), var(--player-prop));
}

* {
  margin: 0;
  padding: 0;
}

input[type="checkbox"] {
  appearance: none;
  width: 0;
  height: 0;
}

#grids {
  display: grid;
  width: fit-content;
  gap: 20px;
  grid-template-columns: calc(var(--cell-size) * 3) calc(var(--cell-size) * 3);

  > div {
    display: grid;
    grid-template-columns: var(--cell-size) var(--cell-size) var(--cell-size);

    & label {
      width: 100px;
      height: 100px;
      border: solid 1px black;
      font-size: 150px;
      line-height: 70px;
      font-family: "Comic Neue";
      text-align: center;

      & span {
        display: block;
        visibility: hidden;
      }
    }

    :has(input:not(:checked)) {
      cursor: pointer;
    }

    :has(input:checked) {
      pointer-events: none;

      & span {
        visibility: visible;
      }
    }
  }
}

input[type="reset"] {
  padding: 10px;
  background-color: #0d6efd;
  color: white;
  border: none;
  border-radius: 5px;
  cursor: pointer;
  margin-top: 40px;
  margin-bottom: 10px;
}

#current-player {
  counter-reset: player var(--player);
  & span::after {
    content: counter(player);
  }
}